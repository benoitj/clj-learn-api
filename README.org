* What is this?

A learning project to develop my clojure skills building APIs in the same landscape as spring, spring boot, spring controllers, and spring data jpa.

* endpoints

** GET `/users`
#+begin_src sh
curl -s -H 'Accept: application/json'  http://localhost:3000/users
#+end_src

** GET `/users/:id`
#+begin_src bash
curl -s -H 'Accept: application/json'  http://localhost:3000/users/1 | jq
#+end_src

** POST `/users`
#+begin_src sh
curl -s -X POST -d '{"id": 444, "name": "foobar"}' -H 'Content-Type: application/json'  -H 'Accept: application/json'  http://localhost:3000/users | jq
#+end_src

** DELETE `/users/:id`
#+begin_src bash
curl -s -X DELETE -H 'Accept: application/json'  http://localhost:3000/users/1 | jq
#+end_src



* Areas

** API
*** RESTful API
*** request body validation
*** error handling
** persistence
*** connect to relational db
*** mapping between DB model and API model
*** versionned DB schema
**** flyway, or migratus
**** auto provision at start
***** what happens when multiple apps starts?
** system configuration and loading
*** springboot replacement with autoconfigure
** testing
*** unit tests
*** approval tests
*** integration tests
** auth
** monitoring
*** logging
**** discrete
**** "around"
*** probes (health, info)
*** micrometer / prometheus metrics
* current problem solving 
** NEXT use jdbc next and honeysql to implement a db backend
** NEXT implement component
** archive
*** DONE Basic project tooling [7/7]
**** DONE create project skeleton
Installed the deps-new tool with the command:
#+begin_src shell
clojure -Ttools install io.github.seancorfield/deps-new '{:git/tag "v0.4.9"}' :as new`
#+end_src

created the project with:
#+begin_src shell
  cd ~/src/projects
  clojure -Tnew app :name benoitj/clj-learn-api
#+end_src

**** DONE able to build the app

you can also create your own build task by editing build.clj

here is one that run-tests, create a uber jar with pom.xml in META-INF
#+begin_src bash
  clojure -T:build ci
#+end_src

**** DONE able to run tests
#+begin_src bash
  clojure -T:build test
#+end_src
**** DONE able to run the app
#+begin_src bash
  clojure -X:run-x
  clojure -X:run-x :name '"Benoit"'
#+end_src

to run the method directly:
#+begin_src bash
    clojure -M:run-m
    clojure -M:run-m Via-Main
#+end_src

**** DONE able to run a basic repl in Emacs
cider detects my deps.edn and loads the proper dependencies
**** DONE basic linting
- [X] clj-kondo
**** DONE refactor
accessible under C-c C-m
- [ ] clj-refactor
*** DONE API and system loading [4/4]
**** DONE build a basic GET API
***** ring + compojure to build a dummy API
**** DONE implement DELETE/POST
**** DONE use an atom as a "db"
***** protocol?
**** DONE split: controller logic (the req/res), service, persistence 
*** DONE sourcehut convert README.org to custom readme
